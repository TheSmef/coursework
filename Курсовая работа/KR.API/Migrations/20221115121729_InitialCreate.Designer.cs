// <auto-generated />
using System;
using KR.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KR.API.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20221115121729_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KR.Models.Account", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasCheckConstraint("CH_Email", "Email like '%@%.%'");
                });

            modelBuilder.Entity("Kr.Models.Category", b =>
                {
                    b.Property<Guid>("Id_Category")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id_Category");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Kr.Models.Order", b =>
                {
                    b.Property<Guid>("Id_Order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date_Order")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_Number")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<Guid>("UserPostId_User_Post")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_Order");

                    b.HasIndex("UserPostId_User_Post");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Kr.Models.OrderProduct", b =>
                {
                    b.Property<Guid>("Id_order_product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId_Order")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<Guid>("ProductId_Product_Storage")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_order_product");

                    b.HasIndex("OrderId_Order");

                    b.HasIndex("ProductId_Product_Storage");

                    b.ToTable("OrderProducts");

                    b.HasCheckConstraint("CH_Amount_Order", "Amount > 0");

                    b.HasCheckConstraint("CH_Price_Order", "Price > 0");
                });

            modelBuilder.Entity("Kr.Models.Post", b =>
                {
                    b.Property<Guid>("Id_Post")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id_Post");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Posts");

                    b.HasCheckConstraint("CH_Salary_Post", "Salary > 0");
                });

            modelBuilder.Entity("Kr.Models.ProductStorage", b =>
                {
                    b.Property<Guid>("Id_Product_Storage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("CategoryId_Category")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("Exipiration_Date")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Product_Storage");

                    b.HasIndex("CategoryId_Category");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductStorages");

                    b.HasCheckConstraint("CH_Amount_Product", "Amount >= 0");

                    b.HasCheckConstraint("CH_Cost_Product", "Cost > 0");

                    b.HasCheckConstraint("CH_Exrire_Product", "Exipiration_Date >= 0");
                });

            modelBuilder.Entity("Kr.Models.Purchase", b =>
                {
                    b.Property<Guid>("Id_Puchase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_Creation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Purchase")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<Guid>("ProductStorageId_Product_Storage")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PurchaseAgreementId_Purchase_Agreement")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_Puchase");

                    b.HasIndex("ProductStorageId_Product_Storage");

                    b.HasIndex("PurchaseAgreementId_Purchase_Agreement");

                    b.ToTable("Purchases");

                    b.HasCheckConstraint("CH_Amount_Purchase", "Amount > 0");

                    b.HasCheckConstraint("CH_Price_Puchase", "Price > 0");
                });

            modelBuilder.Entity("Kr.Models.PurchaseAgreement", b =>
                {
                    b.Property<Guid>("Id_Purchase_Agreement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Agreement_Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Date_Of_Purchase")
                        .HasColumnType("datetime2");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Purchase_Agreement");

                    b.ToTable("PurchaseAgreements");
                });

            modelBuilder.Entity("Kr.Models.Role", b =>
                {
                    b.Property<Guid>("Id_Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountUserUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id_Role");

                    b.HasIndex("AccountUserUserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Kr.Models.SalaryHistory", b =>
                {
                    b.Property<Guid>("Id_SalaryHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Payment")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<bool>("Premium")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserPostId_User_Post")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_SalaryHistory");

                    b.HasIndex("UserPostId_User_Post");

                    b.ToTable("SalaryHistories");

                    b.HasCheckConstraint("CH_Payment_Salary", "Payment > 0");
                });

            modelBuilder.Entity("Kr.Models.StorageHistory", b =>
                {
                    b.Property<Guid>("Id_StorageHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductStorageId_Product_Storage")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_StorageHistory");

                    b.HasIndex("ProductStorageId_Product_Storage");

                    b.ToTable("StorageHistory");
                });

            modelBuilder.Entity("Kr.Models.User", b =>
                {
                    b.Property<Guid>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Otch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kr.Models.UserPost", b =>
                {
                    b.Property<Guid>("Id_User_Post")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PostId_Post")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Share")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<Guid>("UserId_User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_User_Post");

                    b.HasIndex("PostId_Post");

                    b.HasIndex("UserId_User");

                    b.ToTable("UserPosts");

                    b.HasCheckConstraint("Ch_Share_UserPost", "Share > 0 AND Share <= 1");
                });

            modelBuilder.Entity("KR.Models.Account", b =>
                {
                    b.HasOne("Kr.Models.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("KR.Models.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kr.Models.Order", b =>
                {
                    b.HasOne("Kr.Models.UserPost", "UserPost")
                        .WithMany()
                        .HasForeignKey("UserPostId_User_Post")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserPost");
                });

            modelBuilder.Entity("Kr.Models.OrderProduct", b =>
                {
                    b.HasOne("Kr.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId_Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kr.Models.ProductStorage", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId_Product_Storage")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Kr.Models.ProductStorage", b =>
                {
                    b.HasOne("Kr.Models.Category", "Category")
                        .WithMany("ProductStorages")
                        .HasForeignKey("CategoryId_Category")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Kr.Models.Purchase", b =>
                {
                    b.HasOne("Kr.Models.ProductStorage", "ProductStorage")
                        .WithMany()
                        .HasForeignKey("ProductStorageId_Product_Storage")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kr.Models.PurchaseAgreement", "PurchaseAgreement")
                        .WithMany("Purchases")
                        .HasForeignKey("PurchaseAgreementId_Purchase_Agreement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductStorage");

                    b.Navigation("PurchaseAgreement");
                });

            modelBuilder.Entity("Kr.Models.Role", b =>
                {
                    b.HasOne("KR.Models.Account", "AccountUser")
                        .WithMany("Roles")
                        .HasForeignKey("AccountUserUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountUser");
                });

            modelBuilder.Entity("Kr.Models.SalaryHistory", b =>
                {
                    b.HasOne("Kr.Models.UserPost", "UserPost")
                        .WithMany("SalaryHistories")
                        .HasForeignKey("UserPostId_User_Post")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserPost");
                });

            modelBuilder.Entity("Kr.Models.StorageHistory", b =>
                {
                    b.HasOne("Kr.Models.ProductStorage", "ProductStorage")
                        .WithMany()
                        .HasForeignKey("ProductStorageId_Product_Storage")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductStorage");
                });

            modelBuilder.Entity("Kr.Models.UserPost", b =>
                {
                    b.HasOne("Kr.Models.Post", "Post")
                        .WithMany("UserPosts")
                        .HasForeignKey("PostId_Post")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kr.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KR.Models.Account", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Kr.Models.Category", b =>
                {
                    b.Navigation("ProductStorages");
                });

            modelBuilder.Entity("Kr.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Kr.Models.Post", b =>
                {
                    b.Navigation("UserPosts");
                });

            modelBuilder.Entity("Kr.Models.PurchaseAgreement", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("Kr.Models.User", b =>
                {
                    b.Navigation("Account");
                });

            modelBuilder.Entity("Kr.Models.UserPost", b =>
                {
                    b.Navigation("SalaryHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
